{"version":3,"sources":["src/todoform.js","src/todo.js","src/todolist.js","src/dom.js","src/index.js"],"names":["TodoForm","value","onSubmit","view","createView","form","document","createElement","input","setAttribute","appendChild","onsubmit","e","preventDefault","Todo","onComplete","onDelete","onEdit","id","text","completed","editing","el","className","checkbox","getCheckbox","ondblclick","innerHTML","getEditForm","button","getDeleteButton","createTextNode","onchange","innerText","onclick","TodoList","todos","ul","forEach","todo","APP_ID","DOM","app","elements","dom","map","node","actions","Object","entries","name","action","createAction","props","fragment","createDocumentFragment","target","getElementById","createDOM","render","find","filter","Date","valueOf","window","addEventListener"],"mappings":"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","file":"src.b0a341ff.js","sourceRoot":"..","sourcesContent":["export default class TodoForm {\n  constructor({ value = \"\", onSubmit }) {\n    this.view = this.createView(value, onSubmit);\n  }\n\n  createView(value, onSubmit) {\n    const form = document.createElement(\"form\");\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", \"search\");\n    input.setAttribute(\"value\", value);\n    form.appendChild(input);\n    form.onsubmit = e => {\n      e.preventDefault();\n\n      onSubmit(input.value);\n    };\n\n    return form;\n  }\n}\n","import TodoForm from \"./todoform\";\n\nexport default class Todo {\n  constructor({ id, text, completed }, onComplete, onDelete, onEdit) {\n    this.id = id;\n    this.completed = completed;\n    this.editing = false;\n    this.view = this.createView(text, onComplete, onDelete, onEdit);\n  }\n\n  createView(text, onComplete, onDelete, onEdit) {\n    const el = document.createElement(\"li\");\n\n    if (!this.completed) {\n      const checkbox = this.getCheckbox(onComplete);\n\n      el.ondblclick = () => {\n        if (this.editing) {\n          return;\n        }\n\n        this.editing = true;\n        this.view.innerHTML = \"\";\n        this.view.appendChild(this.getEditForm(text, onEdit));\n      };\n      el.appendChild(checkbox);\n    } else {\n      el.className = \"completed\";\n    }\n\n    const button = this.getDeleteButton(onDelete);\n\n    el.appendChild(document.createTextNode(text));\n    el.appendChild(button);\n\n    return el;\n  }\n\n  getCheckbox(onComplete) {\n    const checkbox = document.createElement(\"input\");\n    checkbox.setAttribute(\"type\", \"checkbox\");\n    checkbox.onchange = () => {\n      onComplete(this.id);\n    };\n\n    return checkbox;\n  }\n\n  getDeleteButton(onDelete) {\n    const button = document.createElement(\"button\");\n    button.setAttribute(\"type\", \"button\");\n    button.innerText = \"Remove\";\n\n    button.onclick = () => {\n      onDelete(this.id);\n    };\n\n    return button;\n  }\n\n  getEditForm(value, onEdit) {\n    return new TodoForm({\n      value,\n      onSubmit: text => {\n        onEdit(this.id, text);\n      }\n    }).view;\n  }\n}\n","import Todo from \"./todo\";\n\nexport default class TodoList {\n  constructor({ todos, onComplete, onDelete, onEdit }) {\n    this.view = this.createView(todos, onComplete, onDelete, onEdit);\n  }\n\n  createView(todos, onComplete, onDelete, onEdit) {\n    const ul = document.createElement(\"ul\");\n\n    todos.forEach(todo => {\n      ul.appendChild(new Todo(todo, onComplete, onDelete, onEdit).view);\n    });\n\n    return ul;\n  }\n}\n","const APP_ID = \"app\";\n\nexport class DOM {\n  constructor(app) {\n    this.app = app;\n  }\n\n  createDOM(elements) {\n    const dom = elements.map(node => {\n      const actions = {};\n\n      Object.entries(node.actions).forEach(([name, action]) => {\n        actions[name] = this.createAction(action);\n      });\n\n      const props = {\n        ...node.props(),\n        ...actions\n      };\n      return new node.el(props);\n    });\n\n    const fragment = document.createDocumentFragment();\n    dom.forEach(el => fragment.appendChild(el.view));\n\n    return fragment;\n  }\n\n  render() {\n    const target = document.getElementById(APP_ID);\n    target.innerHTML = \"\";\n\n    target.appendChild(this.createDOM(this.app));\n  }\n\n  createAction(action) {\n    return (...args) => {\n      action(...args);\n      this.render();\n    };\n  }\n}\n","import TodoForm from \"./todoform\";\nimport TodoList from \"./todolist\";\n\nimport { DOM } from \"./dom\";\n\nlet todos = [];\n\nconst onComplete = id => {\n  const todo = todos.find(todo => todo.id === id);\n  todo.completed = true;\n\n  todos = [\n    ...todos.filter(el => !el.completed),\n    ...todos.filter(el => el.completed)\n  ];\n};\n\nconst onDelete = id => {\n  todos = todos.filter(el => el.id !== id);\n};\n\nconst onSubmit = todo => {\n  todos = [\n    { id: new Date().valueOf(), completed: false, text: todo },\n    ...todos\n  ];\n};\n\nconst onEdit = (id, text) => {\n  const todo = todos.find(todo => todo.id === id);\n  todo.text = text;\n};\n\nconst app = new DOM([\n  { el: TodoForm, props: () => {}, actions: { onSubmit } },\n  {\n    el: TodoList,\n    props: () => {\n      return { todos };\n    },\n    actions: { onComplete, onDelete, onEdit }\n  }\n]);\n\nwindow.addEventListener(\"load\", () => {\n  app.render();\n});\n"]}